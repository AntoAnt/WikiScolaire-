package com.ecetech.b3.itproject;

import java.io.IOException;
import java.sql.SQLException;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.ecetech.b3.itproject.redline.beans.user;
import com.ecetech.b3.itproject.redline.dao.userDAO;

/**
 * Servlet implementation class ControleurPrincipal
 */
@WebServlet("/ControleurPrincipal")
public class ControleurPrincipal extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ControleurPrincipal() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see Servlet#init(ServletConfig)
	 */
	public void init(ServletConfig config) throws ServletException {
		// TODO Auto-generated method stub
	}

	/**
	 * @see Servlet#destroy()
	 */
	public void destroy() {
		// TODO Auto-generated method stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
		String idaction = request.getParameter("idaction");
		
		if(idaction==null){
			System.out.println("erreur idaction non trouver");
		}
		else if(idaction.equals("authentification")){
			String login = request.getParameter("CHAMP_login");
			String psw = request.getParameter("CHAMP_mdp");
			//String psw = cripterPswAlgoInit(request.getParameter("CHAMP_mdp"));
			try {
				System.out.println("erreur IDuser");
				//user u = userDAO.getuserLoginPsw(login,psw);
				user u = userDAO.getuser(login);
				
				if(u == null){
					// forward vers la âge jsp d'erreur d'authentification ; user login inexistant
					System.out.println("erreur user null");
				}
				else if(!(u.getMdp().equals(psw))){
					System.out.println("erreur mauvais mdp");
					// forward vers la âge jsp d'erreur d'authentification ; user psw erroné
				}
				else if(u.getMdp().equals(psw)){
					System.out.println("Ok Creation de la session");
					// création d'une session utilisateur ...
					// forward vers la page d'acceuil après authentification
				}
				
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				//tester sur l'exception et selon le code -> retourner une url : 505... 404...
			}
			
		}
		else if(idaction.equals("newuser")){
			String login = request.getParameter("CHAMP_login");			
			//String id = request.getParameter("CHAMP_id"); to generate UUID
			String id = request.getParameter("CHAMP_id");
			String psw = request.getParameter("CHAMP_mdp");
			String niveau = request.getParameter("CHAMP_niveau");

			user u = new user(id, login, psw, niveau);
			try {
				int codeop = userDAO.insertUser(u);
				//selon le code ... retourner le résultat de l'opération ... utilisateur ajouté avec succès;
				
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				//tester sur l'exception et selon le code -> retourner une url : 505... 404...
			}
			
		}
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
